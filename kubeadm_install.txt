sudo apt update
sudo apt install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
sudo apt update
apt-cache policy docker-ce
sudo apt install docker-ce
sudo systemctl status docker


Configuration (master node)
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sudo sysctl --system

Installation
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl
sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl


Initialization:

kubeadm init --pod-network-cidr=10.244.0.0/16
<!--
  if init fails
  The problem is cgroup driver. Kubernetes cgroup driver is set to systems but docker was set to systemd
  create /etc/docker/daemon.json and add below
  {
      "exec-opts": ["native.cgroupdriver=systemd"]
  }
  
 sudo systemctl daemon-reload
 sudo systemctl restart docker
 sudo systemctl restart kubelet
 run init again 
-->
 copy the last line of init command and save it in notepad
 
 run on worker node:
 kubeadm join 139.59.22.52:6443 --token w44x7b.p2o83ltqya21gikd \
        --discovery-token-ca-cert-hash sha256:cbb2c5556f21392a21b569405e6065c2e57bb4fdf26021d9afc519639664249d 
      
Start using cluster: 

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

Master Nodes (Networking aspect):
kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
